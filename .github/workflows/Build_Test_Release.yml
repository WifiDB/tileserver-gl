name: "Build, Test, Publish"

on: 
  workflow_dispatch:
    inputs:
      docker_user:
        description: 'Docker Username'     
        required: true
      docker_token:
        description: 'Docker Token'     
        required: true
      npm_token:
        description: 'NPM Token'
        required: true

jobs:
  release:
    name: "Build, Test, Publish"
    runs-on: ubuntu-latest

    steps:
      -
        name: "Checkout source code"
        uses: "actions/checkout@v3.3.0"
        with:
          ref: ${{ github.ref }}
      -
        name: Set up node
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      -
        name: Get version
        run: |
          echo "PACKAGE_VERSION=$(grep '"version"' package.json | cut -d '"' -f 4 | head -n 1)" >> $GITHUB_ENV
      -
        name: Update packages
        run: sudo apt update -qq
      -
        name: Install apt packages
        run: sudo apt-get install -y libcairo2-dev libjpeg8-dev libpango1.0-dev libgif-dev build-essential g++ xvfb libgles2-mesa-dev libgbm-dev libxxf86vm-dev
      -
        name: Install node dependencies
        run: npm install
      -
        name: Download test data
        run: wget -O test_data.zip https://github.com/acalcutt/tileserver-gl/releases/download/test_data/test_data.zip
      -
        name: Unzip test data
        run: unzip -q test_data.zip -d test_data
      -
        name: Run tests
        run: xvfb-run --server-args="-screen 0 1024x768x24" npm test
      -
        name: Remove Test Data
        run: rm -R test_data*
      #-
      #  name: Publish to Full Version NPM
      #  run: |
      #    npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
      #    npm publish --access public
      #  env:
      #    NPM_TOKEN: ${{ github.event.inputs.npm_token }}
      - 
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'arm64'
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ github.event.inputs.docker_user }}
          password: ${{ github.event.inputs.docker_token }}
      -
        name: Build and publish Full Version to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: wifidb/test:latest, wifidb/test:${{ env.PACKAGE_VERSION }}
          platforms: linux/arm64,linux/amd64
      -
        name: Create Tileserver Light Directory
        run: node publish.js --no-publish
      -
        name: Install node dependencies
        run: npm install
        working-directory: ./light
      #-
      #  name: Publish to Light Version NPM
      #  working-directory: ./light
      #  run: |
      #    npm config set //registry.npmjs.org/:_authToken ${NPM_TOKEN}
      #    npm publish --access public
      #  env:
      #    NPM_TOKEN: ${{ github.event.inputs.npm_token }}
      -
        name: Build and publish Light Version to Docker Hub
        uses: docker/build-push-action@v3
        with:
          context: ./light
          file: ./light/Dockerfile
          push: true
          tags: wifidb/test-light:latest, wifidb/test-light:${{ env.PACKAGE_VERSION }}
          platforms: linux/arm64,linux/amd64
